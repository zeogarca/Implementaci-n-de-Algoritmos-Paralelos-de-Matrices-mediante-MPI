  GNU nano 8.1                                                                               mmult.c                                                                                         
    end = MPI_Wtime();

    if (rank == 0) {
        printf("Tiempo total: %.6f s con %d procesos y MPI+OpenMP\n",
               end - start, size);
        // Si quieres ver C (para N pequeño), desempaca y muestra:
        /*
        printf("Matriz C completa:\n");
        for (int r = 0; r < N; r++) {
            for (int p = 0; p < size; p++) {
                int cols_p = cols_per_proc + (p < rem_cols ? 1 : 0);
                int start_col = p * cols_per_proc + (p < rem_cols ? p : rem_cols);
                for (int c = 0; c < cols_p; c++) {
                    printf("%6.2f ",
                        C[ displs_C[p] + c * N + r ] );
                }
            }
            printf("\n");
        }
        */
    }

    // ----------------------------------------------------------------
    // limpieza
    free(A_local);
    free(B_local);
    free(C_local);
    free(sendcnts_A);
    free(displs_A);
    free(sendcnts_B);
    free(displs_B);
    if (rank == 0) {
        free(A);
        free(B);
        free(C);
        free(B_pack);
    }

    MPI_Finalize();
    return 0;
}
 

^G Ayuda         ^O Guardar       ^F Buscar        ^K Cortar        ^T Ejecutar      ^C Ubicación     M-U Deshacer     M-A Poner marca  M-] A llave      M-B Anterior     ◂ Atrás
^X Salir         ^R Leer fich.    ^\ Reemplazar    ^U Pegar         ^J Justificar    ^/ Ir a línea    M-E Rehacer      M-6 Copiar       ^B Buscar atrás  M-F Siguiente    ▸ Adelante
